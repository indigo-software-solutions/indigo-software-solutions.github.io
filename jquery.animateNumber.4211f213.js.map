{"version":3,"sources":["bower_components/jquery-animatenumber/jquery.animateNumber.js"],"names":["$","reverse","value","split","join","defaults","numberStep","now","tween","floored_number","Math","floor","target","elem","text","handle","nodeType","parentNode","handler","_animateNumberSetter","Tween","propHooks","fx","step","number","set","extract_number_parts","separated_number","group_length","numbers","number_parts","current_number_part","current_index","q","i","l","ceil","length","push","remove_precending_zeros","last_index","last","parseInt","toString","animateNumber","numberStepFactories","append","suffix","prop","separator","negative","fn","options","arguments","settings","extend","args","items","each","generic_complete","complete","apply","animate","jQuery"],"mappings":"AAAA;;;;AAKA;AACC,WAASA,CAAT,EAAY;AACX,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAASC,KAAT,EAAgB;AAC5B,WAAOA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgBF,OAAhB,GAA0BG,IAA1B,CAA+B,EAA/B,CAAP;AACD,GAFD;;AAIA,MAAIC,QAAQ,GAAG;AACbC,IAAAA,UAAU,EAAE,oBAASC,GAAT,EAAcC,KAAd,EAAqB;AAC/B,UAAIC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAArB;AAAA,UACIK,MAAM,GAAGZ,CAAC,CAACQ,KAAK,CAACK,IAAP,CADd;AAGAD,MAAAA,MAAM,CAACE,IAAP,CAAYL,cAAZ;AACD;AANY,GAAf;;AASA,MAAIM,MAAM,GAAG,SAATA,MAAS,CAAUP,KAAV,EAAkB;AAC7B,QAAIK,IAAI,GAAGL,KAAK,CAACK,IAAjB;;AACA,QAAKA,IAAI,CAACG,QAAL,IAAiBH,IAAI,CAACI,UAA3B,EAAwC;AACtC,UAAIC,OAAO,GAAGL,IAAI,CAACM,oBAAnB;;AACA,UAAI,CAACD,OAAL,EAAc;AACZA,QAAAA,OAAO,GAAGb,QAAQ,CAACC,UAAnB;AACD;;AACDY,MAAAA,OAAO,CAACV,KAAK,CAACD,GAAP,EAAYC,KAAZ,CAAP;AACD;AACF,GATD;;AAWA,MAAI,CAACR,CAAC,CAACoB,KAAH,IAAY,CAACpB,CAAC,CAACoB,KAAF,CAAQC,SAAzB,EAAoC;AAClCrB,IAAAA,CAAC,CAACsB,EAAF,CAAKC,IAAL,CAAUC,MAAV,GAAmBT,MAAnB;AACD,GAFD,MAEO;AACLf,IAAAA,CAAC,CAACoB,KAAF,CAAQC,SAAR,CAAkBG,MAAlB,GAA2B;AACzBC,MAAAA,GAAG,EAAEV;AADoB,KAA3B;AAGD;;AAED,MAAIW,oBAAoB,GAAG,SAAvBA,oBAAuB,CAASC,gBAAT,EAA2BC,YAA3B,EAAyC;AAClE,QAAIC,OAAO,GAAGF,gBAAgB,CAACxB,KAAjB,CAAuB,EAAvB,EAA2BF,OAA3B,EAAd;AAAA,QACI6B,YAAY,GAAG,EADnB;AAAA,QAEIC,mBAFJ;AAAA,QAGIC,aAHJ;AAAA,QAIIC,CAJJ;;AAMA,SAAI,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGzB,IAAI,CAAC0B,IAAL,CAAUT,gBAAgB,CAACU,MAAjB,GAA0BT,YAApC,CAAnB,EAAsEM,CAAC,GAAGC,CAA1E,EAA6ED,CAAC,EAA9E,EAAkF;AAChFH,MAAAA,mBAAmB,GAAG,EAAtB;;AACA,WAAIE,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGL,YAAf,EAA6BK,CAAC,EAA9B,EAAkC;AAChCD,QAAAA,aAAa,GAAGE,CAAC,GAAGN,YAAJ,GAAmBK,CAAnC;;AACA,YAAID,aAAa,KAAKL,gBAAgB,CAACU,MAAvC,EAA+C;AAC7C;AACD;;AAEDN,QAAAA,mBAAmB,GAAGA,mBAAmB,GAAGF,OAAO,CAACG,aAAD,CAAnD;AACD;;AACDF,MAAAA,YAAY,CAACQ,IAAb,CAAkBP,mBAAlB;AACD;;AAED,WAAOD,YAAP;AACD,GArBD;;AAuBA,MAAIS,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAST,YAAT,EAAuB;AACnD,QAAIU,UAAU,GAAGV,YAAY,CAACO,MAAb,GAAsB,CAAvC;AAAA,QACII,IAAI,GAAGxC,OAAO,CAAC6B,YAAY,CAACU,UAAD,CAAb,CADlB;AAGAV,IAAAA,YAAY,CAACU,UAAD,CAAZ,GAA2BvC,OAAO,CAACyC,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAR,CAAmBE,QAAnB,EAAD,CAAlC;AACA,WAAOb,YAAP;AACD,GAND;;AAQA9B,EAAAA,CAAC,CAAC4C,aAAF,GAAkB;AAChBC,IAAAA,mBAAmB,EAAE;AACnB;;;;;;;;;;;;;AAaAC,MAAAA,MAAM,EAAE,gBAASC,MAAT,EAAiB;AACvB,eAAO,UAASxC,GAAT,EAAcC,KAAd,EAAqB;AAC1B,cAAIC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAArB;AAAA,cACIK,MAAM,GAAGZ,CAAC,CAACQ,KAAK,CAACK,IAAP,CADd;AAGAD,UAAAA,MAAM,CAACoC,IAAP,CAAY,QAAZ,EAAsBzC,GAAtB,EAA2BO,IAA3B,CAAgCL,cAAc,GAAGsC,MAAjD;AACD,SALD;AAMD,OArBkB;;AAuBnB;;;;;;;;;;;;;;;;;;;;;AAqBAE,MAAAA,SAAS,EAAE,mBAASA,UAAT,EAAoBrB,YAApB,EAAkCmB,MAAlC,EAA0C;AACnDE,QAAAA,UAAS,GAAGA,UAAS,IAAI,GAAzB;AACArB,QAAAA,YAAY,GAAGA,YAAY,IAAI,CAA/B;AACAmB,QAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AAEA,eAAO,UAASxC,GAAT,EAAcC,KAAd,EAAqB;AAC1B,cAAI0C,QAAQ,GAAG3C,GAAG,GAAG,CAArB;AAAA,cACIE,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACuC,QAAQ,GAAG,CAAC,CAAJ,GAAQ,CAAjB,IAAsB3C,GAAjC,CADrB;AAAA,cAEIoB,gBAAgB,GAAGlB,cAAc,CAACkC,QAAf,EAFvB;AAAA,cAGI/B,MAAM,GAAGZ,CAAC,CAACQ,KAAK,CAACK,IAAP,CAHd;;AAKA,cAAIc,gBAAgB,CAACU,MAAjB,GAA0BT,YAA9B,EAA4C;AAC1C,gBAAIE,YAAY,GAAGJ,oBAAoB,CAACC,gBAAD,EAAmBC,YAAnB,CAAvC;AAEAD,YAAAA,gBAAgB,GAAGY,uBAAuB,CAACT,YAAD,CAAvB,CAAsC1B,IAAtC,CAA2C6C,UAA3C,CAAnB;AACAtB,YAAAA,gBAAgB,GAAG1B,OAAO,CAAC0B,gBAAD,CAA1B;AACD;;AAEDf,UAAAA,MAAM,CAACoC,IAAP,CAAY,QAAZ,EAAsBzC,GAAtB,EAA2BO,IAA3B,CAAgC,CAACoC,QAAQ,GAAG,GAAH,GAAS,EAAlB,IAAwBvB,gBAAxB,GAA2CoB,MAA3E;AACD,SAdD;AAeD;AAhEkB;AADL,GAAlB;;AAqEA/C,EAAAA,CAAC,CAACmD,EAAF,CAAKP,aAAL,GAAqB,YAAW;AAC9B,QAAIQ,OAAO,GAAGC,SAAS,CAAC,CAAD,CAAvB;AAAA,QACIC,QAAQ,GAAGtD,CAAC,CAACuD,MAAF,CAAS,EAAT,EAAalD,QAAb,EAAuB+C,OAAvB,CADf;AAAA,QAGIxC,MAAM,GAAGZ,CAAC,CAAC,IAAD,CAHd;AAAA,QAIIwD,IAAI,GAAG,CAACF,QAAD,CAJX;;AAMA,SAAI,IAAIpB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGkB,SAAS,CAAChB,MAA7B,EAAqCH,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/CsB,MAAAA,IAAI,CAAClB,IAAL,CAAUe,SAAS,CAACnB,CAAD,CAAnB;AACD,KAT6B,CAW9B;;;AACA,QAAIkB,OAAO,CAAC9C,UAAZ,EAAwB;AACtB;AACA,UAAImD,KAAK,GAAG,KAAKC,IAAL,CAAU,YAAU;AAC9B,aAAKvC,oBAAL,GAA4BiC,OAAO,CAAC9C,UAApC;AACD,OAFW,CAAZ,CAFsB,CAMtB;;AACA,UAAIqD,gBAAgB,GAAGL,QAAQ,CAACM,QAAhC;;AACAN,MAAAA,QAAQ,CAACM,QAAT,GAAoB,YAAW;AAC7BH,QAAAA,KAAK,CAACC,IAAN,CAAW,YAAU;AACnB,iBAAO,KAAKvC,oBAAZ;AACD,SAFD;;AAIA,YAAKwC,gBAAL,EAAwB;AACtBA,UAAAA,gBAAgB,CAACE,KAAjB,CAAuB,IAAvB,EAA6BR,SAA7B;AACD;AACF,OARD;AASD;;AAED,WAAOzC,MAAM,CAACkD,OAAP,CAAeD,KAAf,CAAqBjD,MAArB,EAA6B4C,IAA7B,CAAP;AACD,GAhCD;AAkCD,CAvKA,EAuKCO,MAvKD,CAAD","file":"jquery.animateNumber.4211f213.js","sourceRoot":"../app","sourcesContent":["/** @preserve jQuery animateNumber plugin v0.0.14\n * (c) 2013, Alexandr Borisov.\n * https://github.com/aishek/jquery-animateNumber\n */\n\n// ['...'] notation using to avoid names minification by Google Closure Compiler\n(function($) {\n  var reverse = function(value) {\n    return value.split('').reverse().join('');\n  };\n\n  var defaults = {\n    numberStep: function(now, tween) {\n      var floored_number = Math.floor(now),\n          target = $(tween.elem);\n\n      target.text(floored_number);\n    }\n  };\n\n  var handle = function( tween ) {\n    var elem = tween.elem;\n    if ( elem.nodeType && elem.parentNode ) {\n      var handler = elem._animateNumberSetter;\n      if (!handler) {\n        handler = defaults.numberStep;\n      }\n      handler(tween.now, tween);\n    }\n  };\n\n  if (!$.Tween || !$.Tween.propHooks) {\n    $.fx.step.number = handle;\n  } else {\n    $.Tween.propHooks.number = {\n      set: handle\n    };\n  }\n\n  var extract_number_parts = function(separated_number, group_length) {\n    var numbers = separated_number.split('').reverse(),\n        number_parts = [],\n        current_number_part,\n        current_index,\n        q;\n\n    for(var i = 0, l = Math.ceil(separated_number.length / group_length); i < l; i++) {\n      current_number_part = '';\n      for(q = 0; q < group_length; q++) {\n        current_index = i * group_length + q;\n        if (current_index === separated_number.length) {\n          break;\n        }\n\n        current_number_part = current_number_part + numbers[current_index];\n      }\n      number_parts.push(current_number_part);\n    }\n\n    return number_parts;\n  };\n\n  var remove_precending_zeros = function(number_parts) {\n    var last_index = number_parts.length - 1,\n        last = reverse(number_parts[last_index]);\n\n    number_parts[last_index] = reverse(parseInt(last, 10).toString());\n    return number_parts;\n  };\n\n  $.animateNumber = {\n    numberStepFactories: {\n      /**\n       * Creates numberStep handler, which appends string to floored animated number on each step.\n       *\n       * @example\n       * // will animate to 100 with \"1 %\", \"2 %\", \"3 %\", ...\n       * $('#someid').animateNumber({\n       *   number: 100,\n       *   numberStep: $.animateNumber.numberStepFactories.append(' %')\n       * });\n       *\n       * @params {String} suffix string to append to animated number\n       * @returns {Function} numberStep-compatible function for use in animateNumber's parameters\n       */\n      append: function(suffix) {\n        return function(now, tween) {\n          var floored_number = Math.floor(now),\n              target = $(tween.elem);\n\n          target.prop('number', now).text(floored_number + suffix);\n        };\n      },\n\n      /**\n       * Creates numberStep handler, which format floored numbers by separating them to groups.\n       *\n       * @example\n       * // will animate with 1 ... 217,980 ... 95,217,980 ... 7,095,217,980\n       * $('#world-population').animateNumber({\n       *    number: 7095217980,\n       *    numberStep: $.animateNumber.numberStepFactories.separator(',')\n       * });\n       * @example\n       * // will animate with 1% ... 217,980% ... 95,217,980% ... 7,095,217,980%\n       * $('#salesIncrease').animateNumber({\n       *   number: 7095217980,\n       *   numberStep: $.animateNumber.numberStepFactories.separator(',', 3, '%')\n       * });\n       *\n       * @params {String} [separator=' '] string to separate number groups\n       * @params {String} [group_length=3] number group length\n       * @params {String} [suffix=''] suffix to append to number\n       * @returns {Function} numberStep-compatible function for use in animateNumber's parameters\n       */\n      separator: function(separator, group_length, suffix) {\n        separator = separator || ' ';\n        group_length = group_length || 3;\n        suffix = suffix || '';\n\n        return function(now, tween) {\n          var negative = now < 0,\n              floored_number = Math.floor((negative ? -1 : 1) * now),\n              separated_number = floored_number.toString(),\n              target = $(tween.elem);\n\n          if (separated_number.length > group_length) {\n            var number_parts = extract_number_parts(separated_number, group_length);\n\n            separated_number = remove_precending_zeros(number_parts).join(separator);\n            separated_number = reverse(separated_number);\n          }\n\n          target.prop('number', now).text((negative ? '-' : '') + separated_number + suffix);\n        };\n      }\n    }\n  };\n\n  $.fn.animateNumber = function() {\n    var options = arguments[0],\n        settings = $.extend({}, defaults, options),\n\n        target = $(this),\n        args = [settings];\n\n    for(var i = 1, l = arguments.length; i < l; i++) {\n      args.push(arguments[i]);\n    }\n\n    // needs of custom step function usage\n    if (options.numberStep) {\n      // assigns custom step functions\n      var items = this.each(function(){\n        this._animateNumberSetter = options.numberStep;\n      });\n\n      // cleanup of custom step functions after animation\n      var generic_complete = settings.complete;\n      settings.complete = function() {\n        items.each(function(){\n          delete this._animateNumberSetter;\n        });\n\n        if ( generic_complete ) {\n          generic_complete.apply(this, arguments);\n        }\n      };\n    }\n\n    return target.animate.apply(target, args);\n  };\n\n}(jQuery));\n"]}