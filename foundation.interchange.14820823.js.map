{"version":3,"sources":["bower_components/foundation/js/foundation/foundation.interchange.js"],"names":["$","window","document","undefined","Foundation","libs","interchange","name","version","cache","images_loaded","nodes_loaded","settings","load_attr","named_queries","media_queries","directives","replace","el","path","trigger","test","nodeName","orig_path","each","src","RegExp","attr","last_path","data","data_attr","self","css","get","response","html","init","scope","method","options","inherit","set_data_attr","extend","bindings","reflow","get_media_hash","mediaHash","queryName","matchMedia","matches","toString","events","prevMediaHash","off","on","throttle","currMediaHash","resize","uuid","hasOwnProperty","passed","results","scenario","call","arguments","Array","args","prototype","slice","setTimeout","proxy","scenarios","count","length","S","add_namespace","mq","rule","load","type","force_update","update_images","images","i","loaded_count","cached_images","getAttribute","push","enhance","update_nodes","nodes","not","cached_nodes","object","convert_directive","directive","trimmed","trim","parse_scenario","directive_match","match","media_query","split","raw_arr","parse_data_attr","params","store","random_str","current_uuid","str","namespace","raw","attr_name","output","jQuery"],"mappings":"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","file":"foundation.interchange.14820823.js","sourceRoot":"../app","sourcesContent":[";(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.interchange = {\n    name : 'interchange',\n\n    version : '5.5.3',\n\n    cache : {},\n\n    images_loaded : false,\n    nodes_loaded : false,\n\n    settings : {\n      load_attr : 'interchange',\n\n      named_queries : {\n        'default'     : 'only screen',\n        'small'       : Foundation.media_queries['small'],\n        'small-only'  : Foundation.media_queries['small-only'],\n        'medium'      : Foundation.media_queries['medium'],\n        'medium-only' : Foundation.media_queries['medium-only'],\n        'large'       : Foundation.media_queries['large'],\n        'large-only'  : Foundation.media_queries['large-only'],\n        'xlarge'      : Foundation.media_queries['xlarge'],\n        'xlarge-only' : Foundation.media_queries['xlarge-only'],\n        'xxlarge'     : Foundation.media_queries['xxlarge'],\n        'landscape'   : 'only screen and (orientation: landscape)',\n        'portrait'    : 'only screen and (orientation: portrait)',\n        'retina'      : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\n          'only screen and (min--moz-device-pixel-ratio: 2),' +\n          'only screen and (-o-min-device-pixel-ratio: 2/1),' +\n          'only screen and (min-device-pixel-ratio: 2),' +\n          'only screen and (min-resolution: 192dpi),' +\n          'only screen and (min-resolution: 2dppx)'\n      },\n\n      directives : {\n        replace : function (el, path, trigger) {\n          // The trigger argument, if called within the directive, fires\n          // an event named after the directive on the element, passing\n          // any parameters along to the event that you pass to trigger.\n          //\n          // ex. trigger(), trigger([a, b, c]), or trigger(a, b, c)\n          //\n          // This allows you to bind a callback like so:\n          // $('#interchangeContainer').on('replace', function (e, a, b, c) {\n          //   console.log($(this).html(), a, b, c);\n          // });\n\n          if (el !== null && /IMG/.test(el[0].nodeName)) {\n            var orig_path = $.each(el, function(){this.src = path;});\n            // var orig_path = el[0].src;\n\n            if (new RegExp(path, 'i').test(orig_path)) {\n              return;\n            }\n\n            el.attr(\"src\", path);\n\n            return trigger(el[0].src);\n          }\n          var last_path = el.data(this.data_attr + '-last-path'),\n              self = this;\n\n          if (last_path == path) {\n            return;\n          }\n\n          if (/\\.(gif|jpg|jpeg|tiff|png)([?#].*)?/i.test(path)) {\n            $(el).css('background-image', 'url(' + path + ')');\n            el.data('interchange-last-path', path);\n            return trigger(path);\n          }\n\n          return $.get(path, function (response) {\n            el.html(response);\n            el.data(self.data_attr + '-last-path', path);\n            trigger();\n          });\n\n        }\n      }\n    },\n\n    init : function (scope, method, options) {\n      Foundation.inherit(this, 'throttle random_str');\n\n      this.data_attr = this.set_data_attr();\n      $.extend(true, this.settings, method, options);\n      this.bindings(method, options);\n      this.reflow();\n    },\n\n    get_media_hash : function () {\n        var mediaHash = '';\n        for (var queryName in this.settings.named_queries ) {\n            mediaHash += matchMedia(this.settings.named_queries[queryName]).matches.toString();\n        }\n        return mediaHash;\n    },\n\n    events : function () {\n      var self = this, prevMediaHash;\n\n      $(window)\n        .off('.interchange')\n        .on('resize.fndtn.interchange', self.throttle(function () {\n            var currMediaHash = self.get_media_hash();\n            if (currMediaHash !== prevMediaHash) {\n                self.resize();\n            }\n            prevMediaHash = currMediaHash;\n        }, 50));\n\n      return this;\n    },\n\n    resize : function () {\n      var cache = this.cache;\n\n      if (!this.images_loaded || !this.nodes_loaded) {\n        setTimeout($.proxy(this.resize, this), 50);\n        return;\n      }\n\n      for (var uuid in cache) {\n        if (cache.hasOwnProperty(uuid)) {\n          var passed = this.results(uuid, cache[uuid]);\n          if (passed) {\n            this.settings.directives[passed\n              .scenario[1]].call(this, passed.el, passed.scenario[0], (function (passed) {\n                if (arguments[0] instanceof Array) {\n                  var args = arguments[0];\n                } else {\n                  var args = Array.prototype.slice.call(arguments, 0);\n                }\n\n                return function() {\n                  passed.el.trigger(passed.scenario[1], args);\n                }\n              }(passed)));\n          }\n        }\n      }\n\n    },\n\n    results : function (uuid, scenarios) {\n      var count = scenarios.length;\n\n      if (count > 0) {\n        var el = this.S('[' + this.add_namespace('data-uuid') + '=\"' + uuid + '\"]');\n\n        while (count--) {\n          var mq, rule = scenarios[count][2];\n          if (this.settings.named_queries.hasOwnProperty(rule)) {\n            mq = matchMedia(this.settings.named_queries[rule]);\n          } else {\n            mq = matchMedia(rule);\n          }\n          if (mq.matches) {\n            return {el : el, scenario : scenarios[count]};\n          }\n        }\n      }\n\n      return false;\n    },\n\n    load : function (type, force_update) {\n      if (typeof this['cached_' + type] === 'undefined' || force_update) {\n        this['update_' + type]();\n      }\n\n      return this['cached_' + type];\n    },\n\n    update_images : function () {\n      var images = this.S('img[' + this.data_attr + ']'),\n          count = images.length,\n          i = count,\n          loaded_count = 0,\n          data_attr = this.data_attr;\n\n      this.cache = {};\n      this.cached_images = [];\n      this.images_loaded = (count === 0);\n\n      while (i--) {\n        loaded_count++;\n        if (images[i]) {\n          var str = images[i].getAttribute(data_attr) || '';\n\n          if (str.length > 0) {\n            this.cached_images.push(images[i]);\n          }\n        }\n\n        if (loaded_count === count) {\n          this.images_loaded = true;\n          this.enhance('images');\n        }\n      }\n\n      return this;\n    },\n\n    update_nodes : function () {\n      var nodes = this.S('[' + this.data_attr + ']').not('img'),\n          count = nodes.length,\n          i = count,\n          loaded_count = 0,\n          data_attr = this.data_attr;\n\n      this.cached_nodes = [];\n      this.nodes_loaded = (count === 0);\n\n      while (i--) {\n        loaded_count++;\n        var str = nodes[i].getAttribute(data_attr) || '';\n\n        if (str.length > 0) {\n          this.cached_nodes.push(nodes[i]);\n        }\n\n        if (loaded_count === count) {\n          this.nodes_loaded = true;\n          this.enhance('nodes');\n        }\n      }\n\n      return this;\n    },\n\n    enhance : function (type) {\n      var i = this['cached_' + type].length;\n\n      while (i--) {\n        this.object($(this['cached_' + type][i]));\n      }\n\n      return $(window).trigger('resize.fndtn.interchange');\n    },\n\n    convert_directive : function (directive) {\n\n      var trimmed = this.trim(directive);\n\n      if (trimmed.length > 0) {\n        return trimmed;\n      }\n\n      return 'replace';\n    },\n\n    parse_scenario : function (scenario) {\n      // This logic had to be made more complex since some users were using commas in the url path\n      // So we cannot simply just split on a comma\n\n      var directive_match = scenario[0].match(/(.+),\\s*(\\w+)\\s*$/),\n      // getting the mq has gotten a bit complicated since we started accounting for several use cases\n      // of URLs. For now we'll continue to match these scenarios, but we may consider having these scenarios\n      // as nested objects or arrays in F6.\n      // regex: match everything before close parenthesis for mq\n      media_query         = scenario[1].match(/(.*)\\)/);\n\n      if (directive_match) {\n        var path  = directive_match[1],\n        directive = directive_match[2];\n\n      } else {\n        var cached_split = scenario[0].split(/,\\s*$/),\n        path             = cached_split[0],\n        directive        = '';\n      }\n\n      return [this.trim(path), this.convert_directive(directive), this.trim(media_query[1])];\n    },\n\n    object : function (el) {\n      var raw_arr = this.parse_data_attr(el),\n          scenarios = [],\n          i = raw_arr.length;\n\n      if (i > 0) {\n        while (i--) {\n          // split array between comma delimited content and mq\n          // regex: comma, optional space, open parenthesis\n          var scenario = raw_arr[i].split(/,\\s?\\(/);\n\n          if (scenario.length > 1) {\n            var params = this.parse_scenario(scenario);\n            scenarios.push(params);\n          }\n        }\n      }\n\n      return this.store(el, scenarios);\n    },\n\n    store : function (el, scenarios) {\n      var uuid = this.random_str(),\n          current_uuid = el.data(this.add_namespace('uuid', true));\n\n      if (this.cache[current_uuid]) {\n        return this.cache[current_uuid];\n      }\n\n      el.attr(this.add_namespace('data-uuid'), uuid);\n      return this.cache[uuid] = scenarios;\n    },\n\n    trim : function (str) {\n\n      if (typeof str === 'string') {\n        return $.trim(str);\n      }\n\n      return str;\n    },\n\n    set_data_attr : function (init) {\n      if (init) {\n        if (this.namespace.length > 0) {\n          return this.namespace + '-' + this.settings.load_attr;\n        }\n\n        return this.settings.load_attr;\n      }\n\n      if (this.namespace.length > 0) {\n        return 'data-' + this.namespace + '-' + this.settings.load_attr;\n      }\n\n      return 'data-' + this.settings.load_attr;\n    },\n\n    parse_data_attr : function (el) {\n      var raw = el.attr(this.attr_name()).split(/\\[(.*?)\\]/),\n          i = raw.length,\n          output = [];\n\n      while (i--) {\n        if (raw[i].replace(/[\\W\\d]+/, '').length > 4) {\n          output.push(raw[i]);\n        }\n      }\n\n      return output;\n    },\n\n    reflow : function () {\n      this.load('images', true);\n      this.load('nodes', true);\n    }\n\n  };\n\n}(jQuery, window, window.document));\n"]}